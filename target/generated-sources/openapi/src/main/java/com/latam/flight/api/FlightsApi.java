/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (5.1.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.latam.flight.api;

import com.latam.flight.model.ApiError;
import com.latam.flight.model.Flight;
import io.swagger.annotations.*;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;
import springfox.documentation.annotations.ApiIgnore;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2022-12-01T09:49:12.712351300-03:00[America/Santiago]")
@Validated
@Api(value = "flights", description = "the flights API")
public interface FlightsApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * POST /flights
     * Crea un nuevo vuelo con la informacion recibida.
     *
     * @param flight Informacion de vuelo que desea ser creado. (required)
     * @return Ok (status code 200)
     *         or Unauthorized (status code 401)
     *         or Forbidden (status code 403)
     *         or Internal Server Error (status code 500)
     */
    @ApiOperation(value = "", nickname = "createFlight", notes = "Crea un nuevo vuelo con la informacion recibida.", response = Flight.class, tags={ "Crear vuelo.", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Ok", response = Flight.class),
        @ApiResponse(code = 401, message = "Unauthorized", response = ApiError.class),
        @ApiResponse(code = 403, message = "Forbidden", response = ApiError.class),
        @ApiResponse(code = 500, message = "Internal Server Error", response = ApiError.class) })
    @PostMapping(
        value = "/flights",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    default ResponseEntity<Flight> createFlight(@ApiParam(value = "Informacion de vuelo que desea ser creado." ,required=true )  @Valid @RequestBody Flight flight) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"departureTime\" : \"22:10:50\", \"date\" : \"2000-01-23\", \"number\" : 560, \"arrivalTime\" : \"22:10:50\", \"origin\" : \"CHL\", \"destination\" : \"USA\", \"destinationIataCode\" : \"JFK\", \"type\" : \"Charter\", \"originIataCode\" : \"SCL\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /flights/{number}
     * Obtiene el vuelo asociado al numero de vuelo recibido.
     *
     * @param number Flight number (required)
     * @return Ok (status code 200)
     *         or Unauthorized (status code 401)
     *         or Forbidden (status code 403)
     *         or Internal Server Error (status code 500)
     */
    @ApiOperation(value = "", nickname = "getFlightByNumber", notes = "Obtiene el vuelo asociado al numero de vuelo recibido.", response = Flight.class, tags={ "Obtener Vuelo por Numero.", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Ok", response = Flight.class),
        @ApiResponse(code = 401, message = "Unauthorized", response = ApiError.class),
        @ApiResponse(code = 403, message = "Forbidden", response = ApiError.class),
        @ApiResponse(code = 500, message = "Internal Server Error", response = ApiError.class) })
    @GetMapping(
        value = "/flights/{number}",
        produces = { "application/json" }
    )
    default ResponseEntity<Flight> getFlightByNumber(@ApiParam(value = "Flight number",required=true) @PathVariable("number") String number) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"departureTime\" : \"22:10:50\", \"date\" : \"2000-01-23\", \"number\" : 560, \"arrivalTime\" : \"22:10:50\", \"origin\" : \"CHL\", \"destination\" : \"USA\", \"destinationIataCode\" : \"JFK\", \"type\" : \"Charter\", \"originIataCode\" : \"SCL\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
